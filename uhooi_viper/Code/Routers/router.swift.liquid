//
//  {{ module_info.file_name }}
//  {{ module_info.project_targets }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

/// @mockable
protocol {{ module_info.name }}RouterInput: AnyObject {
}

final class {{ module_info.name }}Router: {{ module_info.name }}RouterInput {

    // MARK: Stored Instance Properties

    private unowned let viewController: {{ module_info.name }}ViewController

    // MARK: Initializers

    private init(viewController: {{ module_info.name }}ViewController) {
        self.viewController = viewController
    }

    // MARK: Type Methods

    static func assembleModule() -> {{ module_info.name }}ViewController {
        guard let view = R.storyboard.{{ module_info.name }}.instantiateInitialViewController() else {
            fatalError("Fail to load {{ module_info.name }}ViewController from Storyboard.")
        }
        let interactor = {{ module_info.name }}Interactor()
        let router = {{ module_info.name }}Router(viewController: view)
        let presenter = {{ module_info.name }}Presenter(view: view, interactor: interactor, router: router)

        view.presenter = presenter
        interactor.presenter = presenter

        return view
    }

    // MARK: {{ module_info.name }}RouterInput

    // MARK: Other Private Methods

}
